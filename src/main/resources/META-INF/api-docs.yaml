openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8082
    description: Generated server url
paths:
  /api/books:
    get:
      tags:
        - book-controller
      operationId: getAllBooks
      parameters:
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
        - name: sort
          in: query
          required: false
          schema:
            type: string
            default: id
        - name: order
          in: query
          required: false
          schema:
            type: string
            default: asc
      responses:
        409:
          description: Conflict
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VndError'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VndError'
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      tags:
        - book-controller
      operationId: createBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        409:
          description: Conflict
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VndError'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VndError'
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/books/{isbn}:
    get:
      tags:
        - book-controller
      operationId: getBook
      parameters:
        - name: isbn
          in: path
          required: true
          schema:
            type: string
      responses:
        409:
          description: Conflict
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VndError'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VndError'
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Book'
    put:
      tags:
        - book-controller
      operationId: updateBook
      parameters:
        - name: isbn
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        409:
          description: Conflict
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VndError'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VndError'
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Book'
    delete:
      tags:
        - book-controller
      operationId: deleteBook
      parameters:
        - name: isbn
          in: path
          required: true
          schema:
            type: string
      responses:
        409:
          description: Conflict
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VndError'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VndError'
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
    patch:
      tags:
        - book-controller
      operationId: updateBookDescription
      parameters:
        - name: isbn
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        409:
          description: Conflict
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VndError'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VndError'
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Book'
components:
  schemas:
    Author:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
    Book:
      required:
        - authors
        - isbn
        - publisher
        - title
      type: object
      properties:
        id:
          type: integer
          format: int64
        isbn:
          type: string
        title:
          type: string
        description:
          type: string
        authors:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Author'
        publisher:
          type: string
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string

  
